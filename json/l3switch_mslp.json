{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 8, false],
        ["tmp_0", 32, false],
        ["tmp_1", 8, false],
        ["tmp_2", 32, false],
        ["tmp_3", 16, false],
        ["tmp_4", 8, false],
        ["tmp_5", 32, false],
        ["tmp_6", 16, false],
        ["tmp_7", 8, false],
        ["tmp_8", 32, false],
        ["tmp_9", 16, false],
        ["key_0", 16, false],
        ["metadata.nextHopMac", 48, false],
        ["metadata.tcp_opt_size", 8, false],
        ["metadata.tunnel", 2, false],
        ["metadata.setRecirculate", 1, false],
        ["_padding_0", 5, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "mslp_t",
      "id" : 3,
      "fields" : [
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["rsv", 4, false],
        ["cwr", 1, false],
        ["ece", 1, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["hdrChecksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "tcp_opt_t",
      "id" : 6,
      "fields" : [
        ["tcp_opt", "*"]
      ],
      "max_length" : 40
    },
    {
      "name" : "udp_t",
      "id" : 7,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length", 16, false],
        ["hdrChecksum", 16, false]
      ]
    },
    {
      "name" : "label_t",
      "id" : 8,
      "fields" : [
        ["label", 16, false],
        ["bos", 8, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mslp",
      "id" : 3,
      "header_type" : "mslp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 5,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp_opt",
      "id" : 6,
      "header_type" : "tcp_opt_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 7,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "labels[0]",
      "id" : 8,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "labels[1]",
      "id" : 9,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "labels[2]",
      "id" : 10,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "labels[3]",
      "id" : 11,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "labels",
      "id" : 0,
      "header_type" : "label_t",
      "size" : 4,
      "header_ids" : [8, 9, 10, 11]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "empty",
      "elements" : []
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x88b5",
              "mask" : null,
              "next_state" : "parse_mslp"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_mslp",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "mslp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_labels"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_labels",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "labels"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00",
              "mask" : null,
              "next_state" : "parse_labels"
            },
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "guess_labels_payload"
            }
          ],
          "transition_key" : [
            {
              "type" : "stack_field",
              "value" : ["labels", "bos"]
            }
          ]
        },
        {
          "name" : "guess_labels_payload",
          "id" : 3,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["mslp", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.tcp_opt_size"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["tcp", "dataOffset"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x0f"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xec"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["tcp", "dataOffset"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x0f"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xec"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00",
              "mask" : null,
              "next_state" : null
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_tcp_opt"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ]
        },
        {
          "name" : "parse_tcp_opt",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.tcp_opt_size"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp_opt"
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_0"]
                  }
                }
              ],
              "op" : "extract_VL"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/l3switch_mslp.p4",
        "line" : 376,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "mslp", "labels[0]", "labels[1]", "labels[2]", "labels[3]", "ipv4", "tcp", "tcp_opt", "udp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_4"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_6"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "source_info" : {
        "filename" : "p4/l3switch_mslp.p4",
        "line" : 355,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward",
      "id" : 5,
      "runtime_data" : [
        {
          "name" : "egressPort",
          "bitwidth" : 9
        },
        {
          "name" : "nextHopMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 193,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egressPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.nextHopMac"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 194,
            "column" : 8,
            "source_fragment" : "meta.nextHopMac = nextHopMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 195,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.rewriteMacs",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "srcMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 209,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = srcMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.nextHopMac"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 210,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = meta.nextHopMac"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forwardTunnel",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "egressPort",
          "bitwidth" : 9
        },
        {
          "name" : "nextHopMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egressPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.nextHopMac"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "meta.nextHopMac = nextHopMac"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.removeMSLP",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "field",
              "value" : ["mslp", "etherType"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 230,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.etherType = hdr.mslp.etherType"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 233,
            "column" : 8,
            "source_fragment" : "hdr.mslp.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 234,
            "column" : 8,
            "source_fragment" : "hdr.labels[0].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "hdr.labels[1].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 236,
            "column" : 8,
            "source_fragment" : "hdr.labels[2].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[3]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 237,
            "column" : 8,
            "source_fragment" : "hdr.labels[3].setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.addMSLP",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "labels",
          "bitwidth" : 64
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 253,
            "column" : 8,
            "source_fragment" : "hdr.mslp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp", "etherType"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 253,
            "column" : 8,
            "source_fragment" : "hdr.mslp = {hdr.ethernet.etherType"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 254,
            "column" : 8,
            "source_fragment" : "hdr.mslp.setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 257,
            "column" : 8,
            "source_fragment" : "hdr.labels[0]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[0]", "label"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">>",
                          "left" : {
                            "type" : "local",
                            "value" : 0
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x30"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 257,
            "column" : 8,
            "source_fragment" : "hdr.labels[0] = {labels[63:48]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[0]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 257,
            "column" : 8,
            "source_fragment" : "hdr.labels[0] = {labels[63:48], 0x00"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 258,
            "column" : 8,
            "source_fragment" : "hdr.labels[1]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[1]", "label"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">>",
                          "left" : {
                            "type" : "local",
                            "value" : 0
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x20"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 258,
            "column" : 8,
            "source_fragment" : "hdr.labels[1] = {labels[47:32]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[1]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 258,
            "column" : 8,
            "source_fragment" : "hdr.labels[1] = {labels[47:32], 0x00"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 259,
            "column" : 8,
            "source_fragment" : "hdr.labels[2]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[2]", "label"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">>",
                          "left" : {
                            "type" : "local",
                            "value" : 0
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x10"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 259,
            "column" : 8,
            "source_fragment" : "hdr.labels[2] = {labels[31:16]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[2]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 259,
            "column" : 8,
            "source_fragment" : "hdr.labels[2] = {labels[31:16], 0x00"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[3]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 260,
            "column" : 8,
            "source_fragment" : "hdr.labels[3]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[3]", "label"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 0
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 260,
            "column" : 8,
            "source_fragment" : "hdr.labels[3] = {labels[15:00]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["labels[3]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 260,
            "column" : 8,
            "source_fragment" : "hdr.labels[3] = {labels[15:00], 0x01"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 261,
            "column" : 8,
            "source_fragment" : "hdr.labels[0].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 262,
            "column" : 8,
            "source_fragment" : "hdr.labels[1].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 263,
            "column" : 8,
            "source_fragment" : "hdr.labels[2].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "labels[3]"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 264,
            "column" : 8,
            "source_fragment" : "hdr.labels[3].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x88b5"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 13,
            "column" : 26,
            "source_fragment" : "0x88B5; ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.selectTunnel",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 286,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 287,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 288,
            "column" : 16,
            "source_fragment" : "dstPort"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 281,
            "column" : 8,
            "source_fragment" : "hash( ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.selectTunnel",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 286,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 287,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 288,
            "column" : 16,
            "source_fragment" : "dstPort"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 281,
            "column" : 8,
            "source_fragment" : "hash( ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.selectTunnel",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 286,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 287,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 288,
            "column" : 16,
            "source_fragment" : "dstPort"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.tunnel"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 281,
            "column" : 8,
            "source_fragment" : "hash( ..."
          }
        }
      ]
    },
    {
      "name" : "l3switch_mslp299",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.setRecirculate"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 299,
            "column" : 20,
            "source_fragment" : "meta.setRecirculate = 1"
          }
        }
      ]
    },
    {
      "name" : "l3switch_mslp241",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "key_0"]
            },
            {
              "type" : "field",
              "value" : ["labels[0]", "label"]
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 241,
            "column" : 15,
            "source_fragment" : "hdr.labels[0].label"
          }
        }
      ]
    },
    {
      "name" : "l3switch_mslp318",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.setRecirculate"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 318,
            "column" : 20,
            "source_fragment" : "meta.setRecirculate = 1"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.popLabel",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "pop",
          "parameters" : [
            {
              "type" : "header_stack",
              "value" : "labels"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 336,
            "column" : 8,
            "source_fragment" : "hdr.labels.pop_front(1)"
          }
        }
      ]
    },
    {
      "name" : "l3switch_mslp341",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "recirculate",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 341,
            "column" : 12,
            "source_fragment" : "recirculate_preserving_field_list(0)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/l3switch_mslp.p4",
        "line" : 184,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_l3switch_mslp241",
          "id" : 0,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 241,
            "column" : 15,
            "source_fragment" : "hdr.labels[0].label"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["l3switch_mslp241"],
          "base_default_next" : "MyIngress.labelLookup",
          "next_tables" : {
            "l3switch_mslp241" : "MyIngress.labelLookup"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.labelLookup",
          "id" : 1,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 240,
            "column" : 10,
            "source_fragment" : "labelLookup"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.labels[0].label",
              "target" : ["scalars", "key_0"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 8, 2],
          "actions" : ["MyIngress.forwardTunnel", "MyIngress.removeMSLP", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.removeMSLP" : "tbl_l3switch_mslp299",
            "MyIngress.forwardTunnel" : "MyIngress.internalMacLookup",
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_l3switch_mslp299",
          "id" : 2,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 299,
            "column" : 40,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["l3switch_mslp299"],
          "base_default_next" : null,
          "next_tables" : {
            "l3switch_mslp299" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.internalMacLookup",
          "id" : 3,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 213,
            "column" : 10,
            "source_fragment" : "internalMacLookup"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 1],
          "actions" : ["MyIngress.rewriteMacs", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.rewriteMacs" : null,
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ipv4Lpm",
          "id" : 4,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 198,
            "column" : 10,
            "source_fragment" : "ipv4Lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 0],
          "actions" : ["MyIngress.forward", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "MyIngress.internalMacLookup",
            "__MISS__" : "node_10"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_selectTunnel",
          "id" : 5,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 312,
            "column" : 38,
            "source_fragment" : "selectTunnel(hdr.tcp.dstPort)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["MyIngress.selectTunnel"],
          "base_default_next" : "MyIngress.tunnelLookup",
          "next_tables" : {
            "MyIngress.selectTunnel" : "MyIngress.tunnelLookup"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_selectTunnel_0",
          "id" : 6,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 313,
            "column" : 43,
            "source_fragment" : "selectTunnel(hdr.udp.dstPort)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["MyIngress.selectTunnel"],
          "base_default_next" : "MyIngress.tunnelLookup",
          "next_tables" : {
            "MyIngress.selectTunnel" : "MyIngress.tunnelLookup"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_selectTunnel_1",
          "id" : 7,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 314,
            "column" : 21,
            "source_fragment" : "selectTunnel(0x0000)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["MyIngress.selectTunnel"],
          "base_default_next" : "MyIngress.tunnelLookup",
          "next_tables" : {
            "MyIngress.selectTunnel" : "MyIngress.tunnelLookup"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.tunnelLookup",
          "id" : 8,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 270,
            "column" : 10,
            "source_fragment" : "tunnelLookup"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.tunnel",
              "target" : ["scalars", "metadata.tunnel"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 3],
          "actions" : ["MyIngress.addMSLP", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : null,
            "__HIT__" : "tbl_l3switch_mslp318"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_l3switch_mslp318",
          "id" : 9,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 318,
            "column" : 40,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["l3switch_mslp318"],
          "base_default_next" : null,
          "next_tables" : {
            "l3switch_mslp318" : null
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 10,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 322,
            "column" : 12,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 295,
            "column" : 11,
            "source_fragment" : "hdr.mslp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["mslp", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_l3switch_mslp241",
          "false_next" : "node_7"
        },
        {
          "name" : "node_7",
          "id" : 1,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 307,
            "column" : 18,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "MyIngress.ipv4Lpm",
          "false_next" : "tbl_drop"
        },
        {
          "name" : "node_10",
          "id" : 2,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 312,
            "column" : 19,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_selectTunnel",
          "false_next" : "node_12"
        },
        {
          "name" : "node_12",
          "id" : 3,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 313,
            "column" : 24,
            "source_fragment" : "hdr.udp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["udp", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_selectTunnel_0",
          "false_next" : "tbl_selectTunnel_1"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "p4/l3switch_mslp.p4",
        "line" : 331,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_20",
      "tables" : [
        {
          "name" : "tbl_l3switch_mslp341",
          "id" : 11,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 341,
            "column" : 12,
            "source_fragment" : "recirculate_preserving_field_list(0)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["l3switch_mslp341"],
          "base_default_next" : null,
          "next_tables" : {
            "l3switch_mslp341" : null
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_popLabel",
          "id" : 12,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 343,
            "column" : 12,
            "source_fragment" : "popLabel()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["MyEgress.popLabel"],
          "base_default_next" : null,
          "next_tables" : {
            "MyEgress.popLabel" : null
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_20",
          "id" : 4,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 340,
            "column" : 11,
            "source_fragment" : "meta.setRecirculate == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.setRecirculate"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_l3switch_mslp341",
          "false_next" : "node_22"
        },
        {
          "name" : "node_22",
          "id" : 5,
          "source_info" : {
            "filename" : "p4/l3switch_mslp.p4",
            "line" : 342,
            "column" : 18,
            "source_fragment" : "hdr.mslp.isValid() && hdr.labels[0].isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["mslp", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["labels[0]", "$valid$"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_popLabel"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/l3switch_mslp.p4",
        "line" : 355,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_2",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "p4/l3switch_mslp.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}